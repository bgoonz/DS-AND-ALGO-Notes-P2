#delay {
  align-items: center;
  background-color: yellow;
  display: flex;
  font-size: 28px;
  height: 60px;
  justify-content: center;
  padding: 10px;
  transition-delay: 2s;
  transition-duration: 4s;
  transition-property: font-size;
  transition-timing-function: linear;
}

/* transition-delay	Specifies a delay (in seconds) for the transition effect
transition-duration	Specifies how many seconds or milliseconds a transition effect takes to complete
transition-property	Specifies the name of the CSS property the transition effect is for */

/* The transition-timing-function property can have the following values:

ease - specifies a transition effect with a slow start, then fast, then end slowly (this is default)
linear - specifies a transition effect with the same speed from start to end
ease-in - specifies a transition effect with a slow start
ease-out - specifies a transition effect with a slow end
ease-in-out - specifies a transition effect with a slow start and end
cubic-bezier(n,n,n,n) - lets you define your own values in a cubic-bezier function */

#delay:hover {
  font-size: 56px;
}

.box {
  color: white;
  border-style: solid;
  border-width: 1px;
  display: block;
  width: 100px;
  height: 100px;
  background-color: #0000FF;
  transition: width 2s;
  transition: height 2s;
  transition: background-color 2s;
  transition: transform 2s;
}

/* The transform property applies a 2D or 3D transformation to an element. 
This property allows you to rotate, scale, move, skew, etc., elements. */

/* To create a transition effect, you must specify two things:

the CSS property you want to add an effect to
the duration of the effect */

/* .transition_shorthand_syntax {
  transition: <property> <duration> <timing-function> <delay>;
} */

.box:hover {
  background-color: #FFCCCC;
  width: 200px;
  height: 200px;
  transform: rotate(180deg);
}

.container {
  align-items: center;
  bottom: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

.btn {
  background-color: #00bfff;
  color: #ffffff;
  border-radius: 10px;
  padding: 1.5rem;
}

.btn--active:hover {
  cursor: pointer;
  transform: translateY(-0.5rem); /* Moves our button up/down on the Y axis */
}