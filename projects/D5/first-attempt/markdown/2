Problem 2: Depth First Search on a Graph
Given the adjacency list below, which friends would Joe visit if he were
trying to get to Jesse using Depth-First Traversal?

NOTE: your function should return a list of friends visited, not including Joe himself.

const adjacencyList = {
  'derek':['selam', 'dean'],
  'joe':['selam'],
  'selam': ['derek', 'joe', 'dean', 'evan'],
  'dean': ['derek', 'evan', 'selam'],
  'sam': ['jen'],
  'evan': ['selam', 'jesse', 'dean'],
  'jen':['sam', 'javier'],
  'javier':['jen'],
  'chris':[],
  'jesse': ['evan'],
};

# Depth-First Search (DFS)

Depth-first search (DFS) is an algorithm for traversing or 
searching tree or graph data structures. One starts at 
the root (selecting some arbitrary node as the root in 
the case of a graph) and explores as far as possible 
along each branch before backtracking.
dfs.png
